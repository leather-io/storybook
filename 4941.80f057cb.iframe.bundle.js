"use strict";(self.webpackChunk_leather_io_ui=self.webpackChunk_leather_io_ui||[]).push([[4941],{"./leather-styles/css/conditions.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{LD:()=>finalizeConditions,Lg:()=>sortConditions});var _helpers_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./leather-styles/helpers.js");const conditions=new Set("_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_complete,_incomplete,_dragging,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_grabbed,_underValue,_overValue,_atValue,_default,_optional,_open,_closed,_fullscreen,_loading,_hidden,_current,_currentPage,_currentStep,_today,_unavailable,_rangeStart,_rangeEnd,_now,_topmost,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,_icon,_starting,sm,smOnly,smDown,md,mdOnly,mdDown,lg,lgOnly,lgDown,xl,xlOnly,xlDown,2xl,2xlOnly,2xlDown,smToMd,smToLg,smToXl,smTo2xl,mdToLg,mdToXl,mdTo2xl,lgToXl,lgTo2xl,xlTo2xl,base".split(",")),conditionRegex=/^@|&|&$/;function isCondition(value){return conditions.has(value)||conditionRegex.test(value)}const underscoreRegex=/^_/,conditionsSelectorRegex=/&|@/;function finalizeConditions(paths){return paths.map((path=>conditions.has(path)?path.replace(underscoreRegex,""):conditionsSelectorRegex.test(path)?`[${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.BB)(path.trim())}]`:path))}function sortConditions(paths){return paths.sort(((a,b)=>{const aa=isCondition(a),bb=isCondition(b);return aa&&!bb?1:!aa&&bb?-1:0}))}},"./leather-styles/css/css.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AH:()=>css,e3:()=>mergeCss});var _helpers_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./leather-styles/helpers.js"),_conditions_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./leather-styles/css/conditions.js");const classNameByProp=new Map,shorthands=new Map;"aspectRatio:asp,boxDecorationBreak:bx-db,zIndex:z,boxSizing:bx-s,objectPosition:obj-p,objectFit:obj-f,overscrollBehavior:ovs-b,overscrollBehaviorX:ovs-bx,overscrollBehaviorY:ovs-by,position:pos/1,top:top,left:left,inset:inset,insetInline:inset-x/insetX,insetBlock:inset-y/insetY,insetBlockEnd:inset-be,insetBlockStart:inset-bs,insetInlineEnd:inset-e/insetEnd/end,insetInlineStart:inset-s/insetStart/start,right:right,bottom:bottom,float:float,visibility:vis,display:d,hideFrom:hide,hideBelow:show,flexBasis:flex-b,flex:flex,flexDirection:flex-d/flexDir,flexGrow:flex-g,flexShrink:flex-sh,gridTemplateColumns:grid-tc,gridTemplateRows:grid-tr,gridColumn:grid-c,gridRow:grid-r,gridColumnStart:grid-cs,gridColumnEnd:grid-ce,gridAutoFlow:grid-af,gridAutoColumns:grid-ac,gridAutoRows:grid-ar,gap:gap,gridGap:grid-g,gridRowGap:grid-rg,gridColumnGap:grid-cg,rowGap:rg,columnGap:cg,justifyContent:jc,alignContent:ac,alignItems:ai,alignSelf:as,padding:p/1,paddingLeft:pl/1,paddingRight:pr/1,paddingTop:pt/1,paddingBottom:pb/1,paddingBlock:py/1/paddingY,paddingBlockEnd:pbe,paddingBlockStart:pbs,paddingInline:px/paddingX/1,paddingInlineEnd:pe/1/paddingEnd,paddingInlineStart:ps/1/paddingStart,marginLeft:ml/1,marginRight:mr/1,marginTop:mt/1,marginBottom:mb/1,margin:m/1,marginBlock:my/1/marginY,marginBlockEnd:mbe,marginBlockStart:mbs,marginInline:mx/1/marginX,marginInlineEnd:me/1/marginEnd,marginInlineStart:ms/1/marginStart,spaceX:sx,spaceY:sy,outlineWidth:ring-w/ringWidth,outlineColor:ring-c/ringColor,outline:ring/1,outlineOffset:ring-o/ringOffset,divideX:dvd-x,divideY:dvd-y,divideColor:dvd-c,divideStyle:dvd-s,width:w/1,inlineSize:w-is,minWidth:min-w/minW,minInlineSize:min-w-is,maxWidth:max-w/maxW,maxInlineSize:max-w-is,height:h/1,blockSize:h-bs,minHeight:min-h/minH,minBlockSize:min-h-bs,maxHeight:max-h/maxH,maxBlockSize:max-b,color:c,fontFamily:ff,fontSize:fs,fontSizeAdjust:fs-a,fontPalette:fp,fontKerning:fk,fontFeatureSettings:ff-s,fontWeight:fw,fontSmoothing:fsmt,fontVariant:fv,fontVariantAlternates:fv-alt,fontVariantCaps:fv-caps,fontVariationSettings:fv-s,fontVariantNumeric:fv-num,letterSpacing:ls,lineHeight:lh,textAlign:ta,textDecoration:td,textDecorationColor:td-c,textEmphasisColor:te-c,textDecorationStyle:td-s,textDecorationThickness:td-t,textUnderlineOffset:tu-o,textTransform:tt,textIndent:ti,textShadow:tsh,textShadowColor:tsh-c/textShadowColor,textOverflow:tov,verticalAlign:va,wordBreak:wb,textWrap:tw,truncate:trunc,lineClamp:lc,listStyleType:li-t,listStylePosition:li-pos,listStyleImage:li-img,listStyle:li-s,backgroundPosition:bg-p/bgPosition,backgroundPositionX:bg-p-x/bgPositionX,backgroundPositionY:bg-p-y/bgPositionY,backgroundAttachment:bg-a/bgAttachment,backgroundClip:bg-cp/bgClip,background:bg/1,backgroundColor:bg-c/bgColor,backgroundOrigin:bg-o/bgOrigin,backgroundImage:bg-i/bgImage,backgroundRepeat:bg-r/bgRepeat,backgroundBlendMode:bg-bm/bgBlendMode,backgroundSize:bg-s/bgSize,backgroundGradient:bg-grad/bgGradient,textGradient:txt-grad,gradientFromPosition:grad-from-pos,gradientToPosition:grad-to-pos,gradientFrom:grad-from,gradientTo:grad-to,gradientVia:grad-via,gradientViaPosition:grad-via-pos,borderRadius:bdr/rounded,borderTopLeftRadius:bdr-tl/roundedTopLeft,borderTopRightRadius:bdr-tr/roundedTopRight,borderBottomRightRadius:bdr-br/roundedBottomRight,borderBottomLeftRadius:bdr-bl/roundedBottomLeft,borderTopRadius:bdr-t/roundedTop,borderRightRadius:bdr-r/roundedRight,borderBottomRadius:bdr-b/roundedBottom,borderLeftRadius:bdr-l/roundedLeft,borderStartStartRadius:bdr-ss/roundedStartStart,borderStartEndRadius:bdr-se/roundedStartEnd,borderStartRadius:bdr-s/roundedStart,borderEndStartRadius:bdr-es/roundedEndStart,borderEndEndRadius:bdr-ee/roundedEndEnd,borderEndRadius:bdr-e/roundedEnd,border:bd,borderWidth:bd-w,borderTopWidth:bd-t-w,borderLeftWidth:bd-l-w,borderRightWidth:bd-r-w,borderBottomWidth:bd-b-w,borderBlockStartWidth:bd-bs-w,borderBlockEndWidth:bd-be-w,borderColor:bd-c,borderInline:bd-x/borderX,borderInlineWidth:bd-x-w/borderXWidth,borderInlineColor:bd-x-c/borderXColor,borderBlock:bd-y/borderY,borderBlockWidth:bd-y-w/borderYWidth,borderBlockColor:bd-y-c/borderYColor,borderLeft:bd-l,borderLeftColor:bd-l-c,borderInlineStart:bd-s/borderStart,borderInlineStartWidth:bd-s-w/borderStartWidth,borderInlineStartColor:bd-s-c/borderStartColor,borderRight:bd-r,borderRightColor:bd-r-c,borderInlineEnd:bd-e/borderEnd,borderInlineEndWidth:bd-e-w/borderEndWidth,borderInlineEndColor:bd-e-c/borderEndColor,borderTop:bd-t,borderTopColor:bd-t-c,borderBottom:bd-b,borderBottomColor:bd-b-c,borderBlockEnd:bd-be,borderBlockEndColor:bd-be-c,borderBlockStart:bd-bs,borderBlockStartColor:bd-bs-c,opacity:op,boxShadow:bx-sh/shadow,boxShadowColor:bx-sh-c/shadowColor,mixBlendMode:mix-bm,filter:filter,brightness:brightness,contrast:contrast,grayscale:grayscale,hueRotate:hue-rotate,invert:invert,saturate:saturate,sepia:sepia,dropShadow:drop-shadow,blur:blur,backdropFilter:bkdp,backdropBlur:bkdp-blur,backdropBrightness:bkdp-brightness,backdropContrast:bkdp-contrast,backdropGrayscale:bkdp-grayscale,backdropHueRotate:bkdp-hue-rotate,backdropInvert:bkdp-invert,backdropOpacity:bkdp-opacity,backdropSaturate:bkdp-saturate,backdropSepia:bkdp-sepia,borderCollapse:bd-cl,borderSpacing:bd-sp,borderSpacingX:bd-sx,borderSpacingY:bd-sy,tableLayout:tbl,transitionTimingFunction:trs-tmf,transitionDelay:trs-dly,transitionDuration:trs-dur,transitionProperty:trs-prop,transition:trs,animation:anim,animationName:anim-n,animationTimingFunction:anim-tmf,animationDuration:anim-dur,animationDelay:anim-dly,animationPlayState:anim-ps,animationComposition:anim-comp,animationFillMode:anim-fm,animationDirection:anim-dir,animationIterationCount:anim-ic,animationRange:anim-r,animationState:anim-s,animationRangeStart:anim-rs,animationRangeEnd:anim-re,animationTimeline:anim-tl,transformOrigin:trf-o,transformBox:trf-b,transformStyle:trf-s,transform:trf,rotate:rotate,rotateX:rotate-x,rotateY:rotate-y,rotateZ:rotate-z,scale:scale,scaleX:scale-x,scaleY:scale-y,translate:translate,translateX:translate-x/x,translateY:translate-y/y,translateZ:translate-z/z,accentColor:ac-c,caretColor:ca-c,scrollBehavior:scr-bhv,scrollbar:scr-bar,scrollbarColor:scr-bar-c,scrollbarGutter:scr-bar-g,scrollbarWidth:scr-bar-w,scrollMargin:scr-m,scrollMarginLeft:scr-ml,scrollMarginRight:scr-mr,scrollMarginTop:scr-mt,scrollMarginBottom:scr-mb,scrollMarginBlock:scr-my/scrollMarginY,scrollMarginBlockEnd:scr-mbe,scrollMarginBlockStart:scr-mbt,scrollMarginInline:scr-mx/scrollMarginX,scrollMarginInlineEnd:scr-me,scrollMarginInlineStart:scr-ms,scrollPadding:scr-p,scrollPaddingBlock:scr-py/scrollPaddingY,scrollPaddingBlockStart:scr-pbs,scrollPaddingBlockEnd:scr-pbe,scrollPaddingInline:scr-px/scrollPaddingX,scrollPaddingInlineEnd:scr-pe,scrollPaddingInlineStart:scr-ps,scrollPaddingLeft:scr-pl,scrollPaddingRight:scr-pr,scrollPaddingTop:scr-pt,scrollPaddingBottom:scr-pb,scrollSnapAlign:scr-sa,scrollSnapStop:scrs-s,scrollSnapType:scrs-t,scrollSnapStrictness:scrs-strt,scrollSnapMargin:scrs-m,scrollSnapMarginTop:scrs-mt,scrollSnapMarginBottom:scrs-mb,scrollSnapMarginLeft:scrs-ml,scrollSnapMarginRight:scrs-mr,scrollSnapCoordinate:scrs-c,scrollSnapDestination:scrs-d,scrollSnapPointsX:scrs-px,scrollSnapPointsY:scrs-py,scrollSnapTypeX:scrs-tx,scrollSnapTypeY:scrs-ty,scrollTimeline:scrtl,scrollTimelineAxis:scrtl-a,scrollTimelineName:scrtl-n,touchAction:tch-a,userSelect:us,overflow:ov,overflowWrap:ov-wrap,overflowX:ov-x,overflowY:ov-y,overflowAnchor:ov-a,overflowBlock:ov-b,overflowInline:ov-i,overflowClipBox:ovcp-bx,overflowClipMargin:ovcp-m,overscrollBehaviorBlock:ovs-bb,overscrollBehaviorInline:ovs-bi,fill:fill,stroke:stk,strokeWidth:stk-w,strokeDasharray:stk-dsh,strokeDashoffset:stk-do,strokeLinecap:stk-lc,strokeLinejoin:stk-lj,strokeMiterlimit:stk-ml,strokeOpacity:stk-op,srOnly:sr,debug:debug,appearance:ap,backfaceVisibility:bfv,clipPath:cp-path,hyphens:hy,mask:msk,maskImage:msk-i,maskSize:msk-s,textSizeAdjust:txt-adj,container:cq,containerName:cq-n,containerType:cq-t,cursor:cursor,textStyle:textStyle".split(",").forEach((utility=>{const[prop,meta]=utility.split(":"),[className,...shorthandList]=meta.split("/");classNameByProp.set(prop,className),shorthandList.length&&shorthandList.forEach((shorthand=>{shorthands.set("1"===shorthand?className:shorthand,prop)}))}));const resolveShorthand=prop=>shorthands.get(prop)||prop,context={conditions:{shift:_conditions_js__WEBPACK_IMPORTED_MODULE_1__.Lg,finalize:_conditions_js__WEBPACK_IMPORTED_MODULE_1__.LD,breakpoints:{keys:["base","sm","md","lg","xl","2xl"]}},utility:{prefix:"leather",transform:(prop,value)=>{const key=resolveShorthand(prop);return{className:`${classNameByProp.get(key)||(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.wo)(key)}_${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.BB)(value)}`}},hasShorthand:!0,toHash:(path,hashFn)=>hashFn(path.join(":")),resolveShorthand}},cssFn=(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.Yb)(context),css=(...styles)=>cssFn(mergeCss(...styles));css.raw=(...styles)=>mergeCss(...styles);const{mergeCss,assignCss}=(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.Mi)(context)},"./leather-styles/css/cva.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Fj:()=>cva,Yc:()=>getCompoundVariantCss,jC:()=>assertCompoundVariant});var _helpers_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./leather-styles/helpers.js"),_css_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./leather-styles/css/css.js");const defaults=conf=>({base:{},variants:{},defaultVariants:{},compoundVariants:[],...conf});function cva(config){const{base,variants,defaultVariants,compoundVariants}=defaults(config),getVariantProps=variants=>({...defaultVariants,...(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.oE)(variants)});function resolve(props={}){const computedVariants=getVariantProps(props);let variantCss={...base};for(const[key,value]of Object.entries(computedVariants))variants[key]?.[value]&&(variantCss=(0,_css_js__WEBPACK_IMPORTED_MODULE_1__.e3)(variantCss,variants[key][value]));const compoundVariantCss=getCompoundVariantCss(compoundVariants,computedVariants);return(0,_css_js__WEBPACK_IMPORTED_MODULE_1__.e3)(variantCss,compoundVariantCss)}const variantKeys=Object.keys(variants);const variantMap=Object.fromEntries(Object.entries(variants).map((([key,value])=>[key,Object.keys(value)])));return Object.assign((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.ph)((function cvaFn(props){return(0,_css_js__WEBPACK_IMPORTED_MODULE_1__.AH)(resolve(props))})),{__cva__:!0,variantMap,variantKeys,raw:resolve,config,merge:function merge(__cva){const override=defaults(__cva.config),variantKeys=(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.sb)(__cva.variantKeys,Object.keys(variants));return cva({base:(0,_css_js__WEBPACK_IMPORTED_MODULE_1__.e3)(base,override.base),variants:Object.fromEntries(variantKeys.map((key=>[key,(0,_css_js__WEBPACK_IMPORTED_MODULE_1__.e3)(variants[key],override.variants[key])]))),defaultVariants:(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.v6)(defaultVariants,override.defaultVariants),compoundVariants:[...compoundVariants,...override.compoundVariants]})},splitVariantProps:function splitVariantProps(props){return(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.rg)(props,variantKeys)},getVariantProps})}function getCompoundVariantCss(compoundVariants,variantMap){let result={};return compoundVariants.forEach((compoundVariant=>{Object.entries(compoundVariant).every((([key,value])=>{if("css"===key)return!0;return(Array.isArray(value)?value:[value]).some((value=>variantMap[key]===value))}))&&(result=(0,_css_js__WEBPACK_IMPORTED_MODULE_1__.e3)(result,compoundVariant.css))})),result}function assertCompoundVariant(name,compoundVariants,variants,prop){if(compoundVariants.length>0&&"object"==typeof variants?.[prop])throw new Error(`[recipe:${name}:${prop}] Conditions are not supported when using compound variants.`)}},"./leather-styles/css/cx.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function cx(){let arg,str="",i=0;for(;i<arguments.length;)(arg=arguments[i++])&&"string"==typeof arg&&(str&&(str+=" "),str+=arg);return str}__webpack_require__.d(__webpack_exports__,{cx:()=>cx})},"./leather-styles/css/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AH:()=>css.AH,Fj:()=>cva.Fj,cx:()=>cx.cx,JB:()=>sva});var css=__webpack_require__("./leather-styles/css/css.js"),cx=__webpack_require__("./leather-styles/css/cx.js"),cva=__webpack_require__("./leather-styles/css/cva.js"),helpers=__webpack_require__("./leather-styles/helpers.js");const slotClass=(className,slot)=>className+"__"+slot;function sva(config){const slots=Object.entries((0,helpers.wO)(config)).map((([slot,slotCva])=>[slot,(0,cva.Fj)(slotCva)])),defaultVariants=config.defaultVariants??{};const variants=config.variants??{},variantKeys=Object.keys(variants);const variantMap=Object.fromEntries(Object.entries(variants).map((([key,value])=>[key,Object.keys(value)])));return Object.assign((0,helpers.ph)((function svaFn(props){const result=slots.map((([slot,cvaFn])=>[slot,(0,cx.cx)(cvaFn(props),config.className&&slotClass(config.className,slot))]));return Object.fromEntries(result)})),{__cva__:!1,raw:function raw(props){const result=slots.map((([slot,cvaFn])=>[slot,cvaFn.raw(props)]));return Object.fromEntries(result)},variantMap,variantKeys,splitVariantProps:function splitVariantProps(props){return(0,helpers.rg)(props,variantKeys)},getVariantProps:variants=>({...defaultVariants||{},...(0,helpers.oE)(variants)})})}},"./leather-styles/helpers.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function isObject(value){return"object"==typeof value&&null!=value&&!Array.isArray(value)}__webpack_require__.d(__webpack_exports__,{BB:()=>withoutSpace,Ek:()=>patternFns,HZ:()=>getPatternStyles,Mi:()=>createMergeCss,Yb:()=>createCss,oE:()=>compact,ph:()=>memo,rg:()=>splitProps,sb:()=>uniq,v6:()=>mergeProps,wO:()=>getSlotRecipes,wo:()=>hypenateProperty,xu:()=>normalizeHTMLProps});var isObjectOrArray=obj=>"object"==typeof obj&&null!==obj;function compact(value){return Object.fromEntries(Object.entries(value??{}).filter((([_,value2])=>void 0!==value2)))}var isBaseCondition=v=>"base"===v;function toChar(code){return String.fromCharCode(code+(code>25?39:97))}function toHash(value){return function toName(code){let x,name="";for(x=Math.abs(code);x>52;x=x/52|0)name=toChar(x%52)+name;return toChar(x%52)+name}(function toPhash(h,x){let i=x.length;for(;i;)h=33*h^x.charCodeAt(--i);return h}(5381,value)>>>0)}var importantRegex=/\s*!(important)?/i;function withoutSpace(str){return"string"==typeof str?str.replaceAll(" ","_"):str}var memo=fn=>{const cache=new Map;return(...args)=>{const key=JSON.stringify(args);if(cache.has(key))return cache.get(key);const result=fn(...args);return cache.set(key,result),result}},MERGE_OMIT=new Set(["__proto__","constructor","prototype"]);function mergeProps(...sources){return sources.reduce(((prev,obj)=>obj?(Object.keys(obj).forEach((key=>{if(MERGE_OMIT.has(key))return;const prevValue=prev[key],value=obj[key];isObject(prevValue)&&isObject(value)?prev[key]=mergeProps(prevValue,value):prev[key]=value})),prev):prev),{})}var isNotNullish=element=>null!=element;function walkObject(target,predicate,options={}){const{stop,getKey}=options;return function inner(value,path=[]){if(isObjectOrArray(value)){const result={};for(const[prop,child]of Object.entries(value)){const key=getKey?.(prop,child)??prop,childPath=[...path,key];if(stop?.(value,childPath))return predicate(value,path);const next=inner(child,childPath);isNotNullish(next)&&(result[key]=next)}return result}return predicate(value,path)}(target)}function normalizeStyleObject(styles,context,shorthand=!0){const{utility,conditions}=context,{hasShorthand,resolveShorthand}=utility;return walkObject(styles,(value=>Array.isArray(value)?function toResponsiveObject(values,breakpoints){return values.reduce(((acc,current,index)=>{const key=breakpoints[index];return null!=current&&(acc[key]=current),acc}),{})}(value,conditions.breakpoints.keys):value),{stop:value=>Array.isArray(value),getKey:shorthand?prop=>hasShorthand?resolveShorthand(prop):prop:void 0})}var fallbackCondition={shift:v=>v,finalize:v=>v,breakpoints:{keys:[]}},sanitize=value=>"string"==typeof value?value.replaceAll(/[\n\s]+/g," "):value;function createCss(context){const{utility,hash,conditions:conds=fallbackCondition}=context,formatClassName=str=>[utility.prefix,str].filter(Boolean).join("-");return memo((({base,...styles}={})=>{const normalizedObject=normalizeStyleObject(Object.assign(styles,base),context),classNames=new Set;return walkObject(normalizedObject,((value,paths)=>{if(null==value)return;const important=function isImportant(value){return"string"==typeof value&&importantRegex.test(value)}(value),[prop,...allConditions]=conds.shift(paths),conditions=function filterBaseConditions(c){return c.slice().filter((v=>!isBaseCondition(v)))}(allConditions),transformed=utility.transform(prop,function withoutImportant(value){return"string"==typeof value?value.replace(importantRegex,"").trim():value}(sanitize(value)));let className=((conditions,className)=>{let result;if(hash){const baseArray=[...conds.finalize(conditions),className];result=formatClassName(utility.toHash(baseArray,toHash))}else result=[...conds.finalize(conditions),formatClassName(className)].join(":");return result})(conditions,transformed.className);important&&(className=`${className}!`),classNames.add(className)})),Array.from(classNames).join(" ")}))}function createMergeCss(context){function resolve(styles){const allStyles=function compactStyles(...styles){return styles.flat().filter((style=>isObject(style)&&Object.keys(compact(style)).length>0))}(...styles);return 1===allStyles.length?allStyles:allStyles.map((style=>normalizeStyleObject(style,context)))}return{mergeCss:memo((function mergeCss(...styles){return mergeProps(...resolve(styles))})),assignCss:function assignCss(...styles){return Object.assign({},...resolve(styles))}}}var wordRegex=/([A-Z])/g,msRegex=/^ms-/,hypenateProperty=memo((property=>property.startsWith("--")?property:property.replace(wordRegex,"-$1").replace(msRegex,"-ms-").toLowerCase())),fnRegExp=new RegExp(`^(${["min","max","clamp","calc"].join("|")})\\(.*\\)`),lengthUnitsPattern=`(?:${"cm,mm,Q,in,pc,pt,px,em,ex,ch,rem,lh,rlh,vw,vh,vmin,vmax,vb,vi,svw,svh,lvw,lvh,dvw,dvh,cqw,cqh,cqi,cqb,cqmin,cqmax,%".split(",").join("|")})`,lengthRegExp=new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`),patternFns={map:function mapObject(obj,fn){return Array.isArray(obj)?obj.map((value=>fn(value))):isObject(obj)?walkObject(obj,(value=>fn(value))):fn(obj)},isCssFunction:v=>"string"==typeof v&&fnRegExp.test(v),isCssVar:v=>"string"==typeof v&&/^var\(--.+\)$/.test(v),isCssUnit:v=>"string"==typeof v&&lengthRegExp.test(v)},getPatternStyles=(pattern,styles)=>{if(!pattern?.defaultValues)return styles;const defaults="function"==typeof pattern.defaultValues?pattern.defaultValues(styles):pattern.defaultValues;return Object.assign({},defaults,compact(styles))},getSlotRecipes=(recipe={})=>{const init=slot=>({className:[recipe.className,slot].filter(Boolean).join("__"),base:recipe.base?.[slot]??{},variants:{},defaultVariants:recipe.defaultVariants??{},compoundVariants:recipe.compoundVariants?getSlotCompoundVariant(recipe.compoundVariants,slot):[]}),recipeParts=(recipe.slots??[]).map((slot=>[slot,init(slot)]));for(const[variantsKey,variantsSpec]of Object.entries(recipe.variants??{}))for(const[variantKey,variantSpec]of Object.entries(variantsSpec))recipeParts.forEach((([slot,slotRecipe])=>{slotRecipe.variants[variantsKey]??={},slotRecipe.variants[variantsKey][variantKey]=variantSpec[slot]??{}}));return Object.fromEntries(recipeParts)},getSlotCompoundVariant=(compoundVariants,slotName)=>compoundVariants.filter((compoundVariant=>compoundVariant.css[slotName])).map((compoundVariant=>({...compoundVariant,css:compoundVariant.css[slotName]})));function splitProps(props,...keys){const descriptors=Object.getOwnPropertyDescriptors(props),dKeys=Object.keys(descriptors),split=k=>{const clone={};for(let i=0;i<k.length;i++){const key=k[i];descriptors[key]&&(Object.defineProperty(clone,key,descriptors[key]),delete descriptors[key])}return clone};return keys.map((key=>split(Array.isArray(key)?key:dKeys.filter(key)))).concat(split(dKeys))}var uniq=(...items)=>{const set=items.reduce(((acc,currItems)=>(currItems&&currItems.forEach((item=>acc.add(item))),acc)),new Set([]));return Array.from(set)},htmlProps=["htmlSize","htmlTranslate","htmlWidth","htmlHeight"];function convert(key){return htmlProps.includes(key)?key.replace("html","").toLowerCase():key}function normalizeHTMLProps(props){return Object.fromEntries(Object.entries(props).map((([key,value])=>[convert(key),value])))}normalizeHTMLProps.keys=htmlProps}}]);